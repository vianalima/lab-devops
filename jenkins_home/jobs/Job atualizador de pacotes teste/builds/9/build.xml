<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1447.v559b_c710cd2e">
  <actions>
    <org.jenkinsci.plugins.workflow.cps.replay.ReplayFlowFactoryAction plugin="workflow-cps@3990.vd281dd77a_388">
      <replacementLoadedScripts/>
    </org.jenkinsci.plugins.workflow.cps.replay.ReplayFlowFactoryAction>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>devops</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
        <entry>
          <org.jenkinsci.plugins.workflow.cps.replay.ReplayCause plugin="workflow-cps@3990.vd281dd77a_388">
            <originalNumber>8</originalNumber>
          </org.jenkinsci.plugins.workflow.cps.replay.ReplayCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <jenkins.metrics.impl.TimeInQueueAction plugin="metrics@4.2.21-458.vcf496cb_839e4">
      <queuingDurationMillis>1</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>0</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
    </jenkins.metrics.impl.TimeInQueueAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="pipeline-groovy-lib@744.v5b_556ee7c253">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@2.2214.vb_b_34b_2ea_9b_83">
      <stagesUUID>eb29abc5-fb47-41bb-80c1-f00dae75bbd4</stagesUUID>
      <pipelineDefs>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef plugin="pipeline-model-api@2.2214.vb_b_34b_2ea_9b_83">
          <stages>
            <stages>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Instalar Dependências</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">echo &quot;Instalando o lsb-release...&quot;
                    sh &apos;sudo apt update&apos;
                    sh &apos;sudo apt install -y lsb-release&apos;</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Verificar Sistema</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">try {
                        // Verifica se o sistema é Ubuntu
                        def osName = sh(script: &apos;lsb_release -si 2&gt;/dev/null&apos;, returnStdout: true).trim()
                        if (osName != &quot;Ubuntu&quot;) {
                            error &quot;Este script só deve ser executado em sistemas Ubuntu.&quot;
                        }
                    } catch (Exception e) {
                        error &quot;Erro ao verificar o sistema: ${e.message}&quot;
                    }</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Mostrar Versão do Ubuntu</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">def ubuntuVersion = sh(script: &apos;lsb_release -rs&apos;, returnStdout: true).trim()
                    echo &quot;A versão do Ubuntu é: ${ubuntuVersion}&quot;</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Atualizar sources.list</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">echo &quot;Atualizando o sources.list e os pacotes...&quot;

                    // Faz um backup do sources.list
                    sh &apos;&apos;&apos;
                        sudo cp /etc/apt/sources.list /etc/apt/sources.list.backup &amp;&amp; 
                        echo &quot;Backup do sources.list realizado com sucesso.&quot;
                    &apos;&apos;&apos;

                    // Atualiza o sources.list
                    sh &apos;&apos;&apos;
                    sudo tee /etc/apt/sources.list &gt; /dev/null &lt;&lt; EOF
# Veja http://help.ubuntu.com/community/UpgradeNotes para como atualizar para
# versões mais novas da distribuição.

#SEF: Alterado para mirror interno
#deb [trusted=yes] http://lnsat-apt.sef.sc.gov.br/lab/mirror/archive.ubuntu.com/ubuntu jammy main
#deb [trusted=yes] http://lnsat-apt.sef.sc.gov.br/lab/mirror/archive.ubuntu.com/ubuntu jammy-updates main
#deb [trusted=yes] http://lnsat-apt.sef.sc.gov.br/lab/mirror/archive.ubuntu.com/ubuntu jammy-security main

# Repositórios padrão
deb http://br.archive.ubuntu.com/ubuntu jammy main restricted
deb-src http://br.archive.ubuntu.com/ubuntu jammy main restricted
deb http://br.archive.ubuntu.com/ubuntu jammy-updates main restricted
deb-src http://br.archive.ubuntu.com/ubuntu jammy-updates main restricted
deb http://br.archive.ubuntu.com/ubuntu jammy universe
deb-src http://br.archive.ubuntu.com/ubuntu jammy universe
deb http://br.archive.ubuntu.com/ubuntu jammy multiverse
deb-src http://br.archive.ubuntu.com/ubuntu jammy multiverse
EOF
                    &apos;&apos;&apos;
                    
                    // Verifica se o sources.list foi atualizado
                    sh &apos;sudo cat /etc/apt/sources.list&apos;</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Atualizar Pacotes</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">sh &apos;sudo apt update&apos;
                    sh &apos;sudo apt upgrade -y&apos;</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            </stages>
            <uuid>eb29abc5-fb47-41bb-80c1-f00dae75bbd4</uuid>
          </stages>
          <agent>
            <variables class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
              <value class="string">ubuntu</value>
            </variables>
            <agentType>
              <key>label</key>
            </agentType>
          </agent>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef>
      </pipelineDefs>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <jenkins.metrics.impl.SubTaskTimeInQueueAction plugin="metrics@4.2.21-458.vcf496cb_839e4">
      <queuingDurationMillis>4</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>3</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
      <executingDurationMillis>6711</executingDurationMillis>
      <workUnitCount>1</workUnitCount>
    </jenkins.metrics.impl.SubTaskTimeInQueueAction>
  </actions>
  <queueId>21</queueId>
  <timestamp>1730407460633</timestamp>
  <startTime>1730407460638</startTime>
  <result>SUCCESS</result>
  <duration>6894</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>pipeline {
    agent { label &apos;ubuntu&apos; } // Executa o pipeline em um agente com o label &apos;ubuntu&apos;

    stages {
        stage(&apos;Instalar Dependências&apos;) {
            steps {
                script {
                    echo &quot;Instalando o lsb-release...&quot;
                    sh &apos;sudo apt update&apos;
                    sh &apos;sudo apt install -y lsb-release&apos;
                }
            }
        }

        stage(&apos;Verificar Sistema&apos;) {
            steps {
                script {
                    try {
                        // Verifica se o sistema é Ubuntu
                        def osName = sh(script: &apos;lsb_release -si 2&gt;/dev/null&apos;, returnStdout: true).trim()
                        if (osName != &quot;Ubuntu&quot;) {
                            error &quot;Este script só deve ser executado em sistemas Ubuntu.&quot;
                        }
                    } catch (Exception e) {
                        error &quot;Erro ao verificar o sistema: ${e.message}&quot;
                    }
                }
            }
        }

        stage(&apos;Mostrar Versão do Ubuntu&apos;) {
            steps {
                script {
                    // Mostra a versão do Ubuntu
                    def ubuntuVersion = sh(script: &apos;lsb_release -rs&apos;, returnStdout: true).trim()
                    echo &quot;A versão do Ubuntu é: ${ubuntuVersion}&quot;
                }
            }
        }

        stage(&apos;Atualizar sources.list&apos;) {
            steps {
                script {
                    echo &quot;Atualizando o sources.list e os pacotes...&quot;

                    // Faz um backup do sources.list
                    sh &apos;&apos;&apos;
                        sudo cp /etc/apt/sources.list /etc/apt/sources.list.backup &amp;&amp; 
                        echo &quot;Backup do sources.list realizado com sucesso.&quot;
                    &apos;&apos;&apos;

                    // Atualiza o sources.list
                    sh &apos;&apos;&apos;
                    sudo tee /etc/apt/sources.list &gt; /dev/null &lt;&lt; EOF
# Veja http://help.ubuntu.com/community/UpgradeNotes para como atualizar para
# versões mais novas da distribuição.

#SEF: Alterado para mirror interno
#deb [trusted=yes] http://lnsat-apt.sef.sc.gov.br/lab/mirror/archive.ubuntu.com/ubuntu jammy main
#deb [trusted=yes] http://lnsat-apt.sef.sc.gov.br/lab/mirror/archive.ubuntu.com/ubuntu jammy-updates main
#deb [trusted=yes] http://lnsat-apt.sef.sc.gov.br/lab/mirror/archive.ubuntu.com/ubuntu jammy-security main

# Repositórios padrão
deb http://br.archive.ubuntu.com/ubuntu jammy main restricted
deb-src http://br.archive.ubuntu.com/ubuntu jammy main restricted
deb http://br.archive.ubuntu.com/ubuntu jammy-updates main restricted
deb-src http://br.archive.ubuntu.com/ubuntu jammy-updates main restricted
deb http://br.archive.ubuntu.com/ubuntu jammy universe
deb-src http://br.archive.ubuntu.com/ubuntu jammy universe
deb http://br.archive.ubuntu.com/ubuntu jammy multiverse
deb-src http://br.archive.ubuntu.com/ubuntu jammy multiverse
EOF
                    &apos;&apos;&apos;
                    
                    // Verifica se o sources.list foi atualizado
                    sh &apos;sudo cat /etc/apt/sources.list&apos;
                }
            }
        }

        stage(&apos;Atualizar Pacotes&apos;) {
            steps {
                script {
                    // Atualiza a lista de pacotes e instala atualizações
                    sh &apos;sudo apt update&apos;
                    sh &apos;sudo apt upgrade -y&apos;
                }
            }
        }
    }
}
</script>
    <loadedScripts class="linked-hash-map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>384106575</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>77009617</long>
      </entry>
      <entry>
        <string>runQueue</string>
        <long>1445608084</long>
      </entry>
      <entry>
        <string>run</string>
        <long>1213802892</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>25145248</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>367856815</long>
      </entry>
    </timings>
    <internalCalls class="sorted-set"/>
    <sandbox>true</sandbox>
    <iota>59</iota>
    <head>1:59</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
    <storageDir>workflow-completed</storageDir>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>